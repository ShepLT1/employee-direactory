{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/luke_shepherd/Desktop/Personal.code/uw-sea-fsf-pt-06-2020-u-c/19-React/02-Homework/employee-direactory/employee-react-app/src/pages/Directory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input } from \"../components/Form\";\nimport { EmployeeList, EmployeeListItem } from \"../components/EmployeeList\";\nimport API from \"../util/API\";\n\nfunction Directory() {\n  _s();\n\n  const [searchState, setSearchState] = useState(\"\");\n  const [employees, setEmployees] = useState([]); // const employees = [{\n  //   name: \"Kyle Long1\",\n  //   thumbnail: \"preview.png\",\n  //   phone: \"(425)123-4567\",\n  //   email: \"sampleemail@me.org\",\n  //   dob: \"1/12/89\"\n  // }, {\n  //   name: \"Kyle Long2\",\n  //   thumbnail: \"preview.png\",\n  //   phone: \"(425)123-4567\",\n  //   email: \"sampleemail@me.org\",\n  //   dob: \"1/12/89\"\n  // }]\n\n  useEffect(() => {\n    API.getEmployees().then(res => setEmployees(res.data.results)).catch(err => console.log(err));\n  }, []); // Write function that searches by employee lastname (via an API call) based on input's state\n\n  const handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const {\n      value\n    } = event.target;\n    console.log(value);\n    setSearchState(value); // Run function from line 10\n  };\n\n  const formatDOB = date => {\n    let dob = new Date(date).getDate();\n    return dob;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        size: \"md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Employee Directory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Click on controls to filter by heading or use the search box to narrow your results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        size: \"md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: searchState,\n            onChange: handleInputChange,\n            name: \"search\",\n            placeholder: \"Search by last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        size: \"md-12\",\n        children: !employees.length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"No Employees to Display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(EmployeeList, {\n          children: employees.slice(0, 10).map(employee => {\n            return /*#__PURE__*/_jsxDEV(EmployeeListItem, {\n              thumbnail: employee.picture.thumbnail,\n              firstName: employee.name.first,\n              lastName: employee.name.last,\n              phone: employee.phone,\n              email: employee.email,\n              dob: formatDOB(employee.dob.date)\n            }, employee.phone, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Directory, \"T0TqMd5JPQyI+ucrzRsVmgOIMOI=\");\n\n_c = Directory;\nexport default Directory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Directory\");","map":{"version":3,"sources":["/Users/luke_shepherd/Desktop/Personal.code/uw-sea-fsf-pt-06-2020-u-c/19-React/02-Homework/employee-direactory/employee-react-app/src/pages/Directory.js"],"names":["React","useState","useEffect","Col","Row","Container","Input","EmployeeList","EmployeeListItem","API","Directory","searchState","setSearchState","employees","setEmployees","getEmployees","then","res","data","results","catch","err","console","log","handleInputChange","event","value","target","formatDOB","date","dob","Date","getDate","length","slice","map","employee","picture","thumbnail","name","first","last","phone","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input } from \"../components/Form\";\nimport { EmployeeList, EmployeeListItem } from \"../components/EmployeeList\";\nimport API from \"../util/API\";\n\nfunction Directory() {\n\n  const [searchState, setSearchState] = useState(\"\");\n  const [employees, setEmployees] = useState([]);\n  // const employees = [{\n  //   name: \"Kyle Long1\",\n  //   thumbnail: \"preview.png\",\n  //   phone: \"(425)123-4567\",\n  //   email: \"sampleemail@me.org\",\n  //   dob: \"1/12/89\"\n  // }, {\n  //   name: \"Kyle Long2\",\n  //   thumbnail: \"preview.png\",\n  //   phone: \"(425)123-4567\",\n  //   email: \"sampleemail@me.org\",\n  //   dob: \"1/12/89\"\n  // }]\n\n  useEffect(() => {\n    API.getEmployees()\n      .then(res => setEmployees(res.data.results))\n      .catch(err => console.log(err))\n  }, []);\n\n  // Write function that searches by employee lastname (via an API call) based on input's state\n\n  const handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { value } = event.target;\n    console.log(value);\n    setSearchState(value);\n\n    // Run function from line 10\n  };\n\n  const formatDOB = (date) => {\n    let dob = new Date(date).getDate();\n\n    return dob\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <h1>Employee Directory</h1>\n          <h4>Click on controls to filter by heading or use the search box to narrow your results</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-12\">\n          <form>\n            <Input\n              value={searchState}\n              onChange={handleInputChange}\n              name=\"search\"\n              placeholder=\"Search by last name\"\n            />\n          </form>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-12\">\n          {!employees.length ? (\n            <h1 className=\"text-center\">No Employees to Display</h1>\n          ) : (\n              <EmployeeList>\n                {employees.slice(0, 10).map(employee => {\n                  return (\n                    <EmployeeListItem\n                      key={employee.phone}\n                      thumbnail={employee.picture.thumbnail}\n                      firstName={employee.name.first}\n                      lastName={employee.name.last}\n                      phone={employee.phone}\n                      email={employee.email}\n                      dob={formatDOB(employee.dob.date)}\n                    />\n                  );\n                })}\n              </EmployeeList>\n            )}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Directory;"]},"metadata":{},"sourceType":"module"}